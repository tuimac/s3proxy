AWSTemplateFormatVersion: 2010-09-09
Description: Create Entire VPN Network

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16

  APIGatewaySubnetCidr:
    Type: String
    Default: 10.0.0.0/24

  S3BucketName:
    Type: String
    Default: 7890-test
 
  NameTagKey:
    Type: String
    Default: Name

  NameTagValue:
    Type: String
    Default: s3proxy

Resources:
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue
 
  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  # Subnet
  APIGatewaySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref APIGatewaySubnetCidr
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  # Route Table
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  RouteTableAccociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref APIGatewaySubnet

  # Security Group
  APIGatewayEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref NameTagValue
      GroupDescription: Allow any IP through HTTPS
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  # Endpoint
  APIGatewayEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .execute-api
      SubnetIds:
        - !Ref APIGatewaySubnet
      VpcId: !Ref Vpc
      VpcEndpointType: Interface
      SecurityGroupIds:
        - !Ref APIGatewayEndpointSecurityGroup
      PrivateDnsEnabled: true

  # S3 Bucket
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketName
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3BucketName
                - /*
            Principal:
              Service: apigateway.amazonaws.com

  # IAM Role
  APIGatewayIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref NameTagValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  # API Gateway
  PrivateRestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - PRIVATE
        Name: !Ref NameTagValue
        Policy:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal: '*'
              Action: execute-api:Invoke
              Resource: execute-api:/*
              Condition:
                StringEquals:
                  aws:sourceVpce: !Ref APIGatewayEndpoint
